"""
Setup script for Word export feature.
Run this script to initialize the Word export functionality.

Usage:
    python setup_word_export.py
"""

import sys
from pathlib import Path


def check_dependencies():
    """Check if required dependencies are installed"""
    print("Checking dependencies...")

    try:
        import docx
        print("✓ python-docx is installed")
        return True
    except ImportError:
        print("✗ python-docx is NOT installed")
        print("\nPlease install it by running:")
        print("  pip install python-docx==1.1.0")
        print("or:")
        print("  pip install -r requirements.txt")
        return False


def create_directories():
    """Create necessary directories"""
    print("\nCreating directories...")

    dirs = [
        Path("backend/templates/word"),
        Path("exports")
    ]

    for dir_path in dirs:
        dir_path.mkdir(parents=True, exist_ok=True)
        print(f"✓ Created/verified: {dir_path}")


def create_default_template():
    """Create the default Word template"""
    print("\nCreating default Word template...")

    try:
        # Import here after dependency check
        from docx import Document
        from docx.shared import Pt, RGBColor, Inches
        from docx.enum.text import WD_ALIGN_PARAGRAPH

        doc = Document()

        # Title
        title = doc.add_heading('{{title}}', level=0)
        title.alignment = WD_ALIGN_PARAGRAPH.CENTER

        # Metadata Section
        doc.add_heading('Metadata', level=1)

        metadata_table = doc.add_table(rows=5, cols=2)
        metadata_table.style = 'Light Grid Accent 1'

        metadata_fields = [
            ("Export Date", "{{date}}"),
            ("Duration", "{{duration}}"),
            ("Number of Speakers", "{{num_speakers}}"),
            ("Language", "{{language}}"),
            ("Total Segments", "{{total_segments}}")
        ]

        for i, (label, placeholder) in enumerate(metadata_fields):
            row = metadata_table.rows[i]
            row.cells[0].text = label
            row.cells[1].text = placeholder
            row.cells[0].paragraphs[0].runs[0].bold = True

        doc.add_paragraph()

        # Transcription Section
        doc.add_heading('Transcription', level=1)

        instruction_para = doc.add_paragraph()
        instruction_run = instruction_para.add_run(
            "The transcription segments will be inserted below this line."
        )
        instruction_run.italic = True
        instruction_run.font.color.rgb = RGBColor(150, 150, 150)

        # Add transcription marker
        doc.add_paragraph('{{TRANSCRIPTION}}')

        # Footer
        doc.add_paragraph()
        footer_para = doc.add_paragraph()
        footer_para.alignment = WD_ALIGN_PARAGRAPH.CENTER
        footer_run = footer_para.add_run("Generated by Audio Scribe AI")
        footer_run.font.size = Pt(9)
        footer_run.font.color.rgb = RGBColor(150, 150, 150)
        footer_run.italic = True

        # Save template
        template_path = Path("backend/templates/word/default_template.docx")
        doc.save(str(template_path))

        print(f"✓ Default template created: {template_path}")
        return True

    except Exception as e:
        print(f"✗ Failed to create template: {e}")
        return False


def main():
    """Main setup routine"""
    print("=" * 60)
    print("Audio Scribe AI - Word Export Setup")
    print("=" * 60)

    # Check dependencies
    if not check_dependencies():
        print("\n" + "=" * 60)
        print("Setup incomplete. Please install dependencies first.")
        print("=" * 60)
        sys.exit(1)

    # Create directories
    create_directories()

    # Create default template
    if not create_default_template():
        print("\n" + "=" * 60)
        print("Setup incomplete. Template creation failed.")
        print("=" * 60)
        sys.exit(1)

    print("\n" + "=" * 60)
    print("Setup completed successfully!")
    print("=" * 60)
    print("\nYou can now use the Word export feature:")
    print("1. Start the application: python run.py")
    print("2. Transcribe an audio file")
    print("3. Click 'Export to Word' to download the Word document")
    print("\nFor more information, see WORD_EXPORT_GUIDE.md")


if __name__ == "__main__":
    main()
